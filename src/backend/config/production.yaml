# Loco configuration file documentation

# Application logging configuration
logger:
  # Enable or disable logging.
  enable: true
  # Enable pretty backtrace (sets RUST_BACKTRACE=1)
  pretty_backtrace: true
  # Log level, options: trace, debug, info, warn or error.
  level: debug
  # Define the logging format. Options: compact, pretty or Json
  format: compact
  # By default, the logger has filters only logs coming from your code or logs coming from the `loco` framework. To see all third party libraries,
  # uncomment the line below to override the filter.
  # override_filter: trace

# Web server configuration
server:
  # Port on which the server will listen. The server binding is 0.0.0.0:{PORT}
  port: {{get_env(name="PORT", default="443")}}
  # The UI hostname or IP address that mailers will point to.
  host: http://localhost
  # Out-of-the-box middleware configuration. To disable middleware, you can change the `enable` field to `false` of comment the middleware block
  middlewares:
    # Enable Etag cache header middleware
    etag:
      enable: true
    # Allows limiting the payload size request. Payloads bigger than this file will block the request.
    limit_payload:
      # Enable/Disable the middleware.
      enable: true
      # the limit size. can be b,kb,kib,mb,mib,gb,gib
      body_limit: 5mb
    # Generating a unique request ID and enhancing logging with additional information such as the start and completion of request processing, latency, status code, and other request details.
    logger:
      # Enable/Disable the middleware.
      enable: true
    # When your code panics, the request still returns 500.
    catch_panic:
      # Enable/Disable the middleware.
      enable: true
    # Timeout for incoming requests middleware. Requests that take more time from the configuration will be dropped and 408 will be returned.
    timeout_request:
      # Enable/Disable the middleware.
      enable: false
      # Duration time in milliseconds.
      timeout: 5000
    cors:
      enable: true
      # Set the value of the [`Access-Control-Allow-Origin`][mdn] header
      allow_origins:
        #   - https://loco.rs
        - {{get_env(name="CORS_ORIGIN", default="https://short.polp.online")}}
      # Set the value of the [`Access-Control-Allow-Headers`][mdn] header
      # allow_headers:
      # - Content-Type
      # Set the value of the [`Access-Control-Allow-Methods`][mdn] header
      # allow_methods:
      #   - POST
      # Set the value of the [`Access-Control-Max-Age`][mdn] header in seconds
      # max_age: 3600

    # server-side static assets config
    # for use with the view_engine in initializers/view_engine.rs
    #
    # static:
    #   enable: true
    #   must_exist: true
    #   precompressed: false
    #   folder:
    #     uri: "/static"
    #     path: "assets/static"
    #   fallback: "assets/static/404.html"

    # client side app static config
    static:
      enable: false
      must_exist: false
      precompressed: true
      folder:
        uri: "/"
        path: "frontend/build"
      fallback: "frontend/build/index.html"

# Worker Configuration
workers:
  # Specifies the worker mode. Options:
  #   - BackgroundQueue - Workers operate asynchronously in the background, processing queued.
  #   - ForegroundBlocking - Workers operate in the foreground and block until tasks are completed.
  #   - BackgroundAsync - Workers operate asynchronously in the background, processing tasks with async capabilities.
  mode: BackgroundQueue

# Mailer Configuration.
mailer:
  # SMTP mailer configuration.
  smtp:
    # Enable/Disable smtp mailer.
    enable: true
    # SMTP server host. e.x localhost, smtp.gmail.com
    host: {{get_env(name="MAILER_HOST", default="localhost")}}
    # SMTP server port
    port: 1025
    # Use secure connection (SSL/TLS).
    secure: false
    # auth:
    #   user:
    #   password:

# Database Configuration
database:
  # Database connection URI
  uri: {{get_env(name="DATABASE_URL", default="postgres://loco:loco@localhost:5432/loco_link_shortener_development")}}
  # When enabled, the sql query will be logged.
  enable_logging: false
  # Set the timeout duration when acquiring a connection.
  connect_timeout: 2000
  # Set the idle duration before closing a connection.
  idle_timeout: 2000
  # Minimum number of connections for a pool.
  min_connections: 1
  # Maximum number of connections for a pool.
  max_connections: 1
  # Run migration up when application is loaded
  auto_migrate: true
  # Truncate a database when an application is loaded. This is a dangerous operation, make sure that you are using this flag only in dev environments or test mode
  dangerously_truncate: false
  # Recreating schema when application is loaded. This is a dangerous operation, make sure that you are using this flag only in dev environments or test mode
  dangerously_recreate: false

# Redis Configuration
redis:
  # Redis connection URI
  uri: {{get_env(name="REDIS_URL", default="redis://127.0.0.1")}}
  # Dangerously flush all data in Redis on startup. dangerous operation, make sure that you are using this flag only in dev environments or test mode
  dangerously_flush: false

# Authentication Configuration
auth:
  # JWT authentication
  jwt:
    # Secret key for token generation and verification
    secret: {{get_env(name="JWT_SECRET")}}
    # Token expiration time in seconds
    expiration: 3600 # 1 hour

settings:
  shortened_length: 6
  max_custom_length: 40
  frontend_url: {{get_env(name="FRONTEND_URL", default="https://short.polp.online")}}
  oauth2:
    secret_key: {{get_env(name="OAUTH_PRIVATE_KEY")}} # Optional, key for Private Cookie Jar, must be more than 64 bytes. Generate using `openssl rand -base64 64`
    authorization_code: # Authorization code grant type
      - client_identifier: google # Identifier for the OAuth2 provider. Replace 'google' with your provider's name if different, must be unique within the oauth2 config.
        client_credentials:
          client_id: {{get_env(name="OAUTH_CLIENT_ID", default="oauth_client_id")}} # Replace with your OAuth2 client ID.
          client_secret: {{get_env(name="OAUTH_CLIENT_SECRET", default="oauth_client_secret")}} # Replace with your OAuth2 client secret.
        url_config:
          auth_url: {{get_env(name="AUTH_URL", default="https://accounts.google.com/o/oauth2/auth")}} # authorization endpoint from the provider
          token_url: {{get_env(name="TOKEN_URL", default="https://www.googleapis.com/oauth2/v3/token")}} # token endpoint from the provider for exchanging the authorization code for an access token
          redirect_url: {{get_env(name="REDIRECT_URL", default="https://s.polp.online/api/oauth2/google/callback")}} # server callback endpoint for the provider
          profile_url: {{get_env(name="PROFILE_URL", default="https://openidconnect.googleapis.com/v1/userinfo")}} # user profile endpoint from the provider for getting user data
          scopes:
            - {{get_env(name="SCOPES_1", default="https://www.googleapis.com/auth/userinfo.email")}} # Scopes for requesting access to user data
            - {{get_env(name="SCOPES_2", default="https://www.googleapis.com/auth/userinfo.profile")}} # Scopes for requesting access to user data
        cookie_config:
          protected_url: {{get_env(name="PROTECTED_URL", default="https://s.polp.online/api/oauth2/protected")}} # Optional - For redirecting to protect url in cookie to prevent XSS attack
        timeout_seconds: 15638400 # Optional, default 600 seconds, set to 6 months
